# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v99Z4iLRf41wxLj00cYmL-TldeDEl-xz
"""

#aula3

import math

#exercicio1
a = 'oi'
def print_mensagem (a):
  print(a)
  print(type(a))
  return
print_mensagem(a)

#exercicio2
distancia_inicial = float(input('Qual é a distância inicial?  '))
distancia_final = float(input('Qual é a distância final?  '))
tempo = float(input('Qual é o tempo?  '))
def velocidade_media(distancia_inicial, distancia_final, tempo):
  velocidade = (distancia_final - distancia_inicial) / tempo
  return velocidade
print(velocidade_media(distancia_inicial, distancia_final, tempo))

gravidade = (9.8)
tempo = float(input('Qual é o tempo?  '))
def velocidade_media(gravidade, tempo):
  velocidade_media = gravidade * tempo
  return velocidade_media
print(velocidade_media(gravidade, tempo))

#exercicio3
altura_da_haste = float(input('Qual é a altura da haste?  '))
tamanha_da_sombra = float(input('Qual é o tamanho da sombra?  '))
def angulo_zenital(altura_da_haste, tamanha_da_sombra):
  tg_angulo_zenital = altura_da_haste / tamanha_da_sombra
  angulo_zenital = math.atan(tg_angulo_zenital)
  return angulo_zenital
print(angulo_zenital(altura_da_haste, tamanha_da_sombra))

#execicio4
milhas = float(input('Qual é a distância em milhas?  '))
def milhas_para_metros(milhas):
  metros = milhas * 1609.34
  return metros
print(milhas_para_metros(milhas))

metros = float(input('Qual é a distância em metros?  '))
def metros_para_milhas(metros):
  milhas = metros / 1609.34
  return milhas
print(metros_para_milhas(metros))

horas = float(input('Qual é a distância em horas?  '))
def horas_para_segundos(horas):
  segundos = horas * 3600
  return segundos
print(horas_para_segundos(horas))

segundos = float(input('Qual é a distância em segundos?  '))
def segundos_para_horas(segundos):
  horas = segundos / 3600
  return horas
print(segundos_para_horas(segundos))

segundos = 30*60
milhas = 4
def milhas_por_segundo_para_kilometros_por_hora(segundos, milhas):
  segundos_para_horas(segundos)
  milhas_para_metros(milhas)
  milhas_por_segundo = milhas_para_metros(milhas) / segundos_para_horas(segundos)
  kilometros_por_hora = milhas_por_segundo * 1.61
  tempo_medio_por_km = 1 / kilometros_por_hora
  print(kilometros_por_hora)
  print(tempo_medio_por_km)
  return
milhas_por_segundo_para_kilometros_por_hora(segundos, milhas)

#exercico5
peso = float(input('Qual é o peso?  '))
altura = float(input('Qual é a altura?  '))
def imc (peso, altura):
  imc = peso / altura**2
  print(imc)
  return
imc(peso, altura)

raio = float(input('Qual é o raio?  '))
def volume_de_uma_esfera(raio):
  volume = (4/3) * math.pi * raio**3
  print(volume)
  return
volume_de_uma_esfera(raio)

comprimento_da_onda = float(input('Qual é o comprimento da onda?  '))
espaco_entre_as_fendas = float(input('Qual é o espaço entre as fendas?  '))
distancia_entre_a_fenda_e_anteparo = float(input('Qual é a distância entre a fenda e o anteparo?  '))
def distantancia_entre_dois_maximos_consecutivivos_de_interferencia(comprimento_da_onda, espaco_entre_as_fendas, distancia_entre_a_fenda_e_anteparo):
  delta_y = comprimento_da_onda * distancia_entre_a_fenda_e_anteparo / espaco_entre_as_fendas
  print(delta_y)
  return
distantancia_entre_dois_maximos_consecutivivos_de_interferencia(comprimento_da_onda,espaco_entre_as_fendas,distancia_entre_a_fenda_e_anteparo)